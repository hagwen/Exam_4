using System.Device.Gpio;
using System;
using System.Threading;


namespace Blinky
{
    public class Program
    {
        private static GpioController s_GpioController;
        private static GpioPin[] leds = new GpioPin[2];
        private static GpioPin[] buttons = new GpioPin[2];
        private static int rounds = 0;
        private static bool isPlaying = true;


        public static void Main()
        {
            s_GpioController = new GpioController();



            int[] ledPins = { 15, 4 };
            int[] buttonPins = { 14, 25 };


            for (int i = 0; i < 2; i++)
            {
                leds[i] = s_GpioController.OpenPin(ledPins[i], PinMode.Output);
                buttons[i] = s_GpioController.OpenPin(buttonPins[i], PinMode.InputPullUp);


                leds[i].Write(PinValue.High);
            }


            for (int i = 0; i < 2; i++)
            {
                int buttonIndex = i;
                buttons[i].ValueChanged += (sender, args) => Button_ValueChanged(leds[buttonIndex], args);
            }



            while (isPlaying)
            {
                if (rounds == 20)
                {
                    isPlaying = false;
                }
            }




        }

        private static void Button_ValueChanged(GpioPin led, PinValueChangedEventArgs e)
        {
            if (e.ChangeType == PinEventTypes.Falling)
            {
                foreach (var pin in leds)
                {
                    pin.Write(PinValue.High);
                }


                led.Write(PinValue.Low);
                rounds++;
                var currentTime = DateTime.Now;
                Console.WriteLine($"Button was pressed at {currentTime}. Total presses: {rounds}");


                string logText = $"Button was pressed at {currentTime}. Total presses: {rounds}" + Environment.NewLine;
                Console.WriteLine("Buttons were pressed: " + rounds + " times");


                File.AppendAllText("log.txt", logText);
            }
        }
    }
}